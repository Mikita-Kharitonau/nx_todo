# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-15 08:43
from __future__ import unicode_literals

import datetime
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField(null=True)),
                ('priority', models.CharField(max_length=1, null=True)),
                ('category', models.CharField(max_length=30, null=True)),
                ('status', models.CharField(max_length=30, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=30, null=True)),
                ('from_datetime', models.DateTimeField(null=True)),
                ('to_datetime', models.DateTimeField(null=True)),
                ('place', models.CharField(max_length=30, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventReminders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_check_time', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0))),
                ('after_term_check', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField(null=True)),
                ('priority', models.CharField(max_length=1, null=True)),
                ('category', models.CharField(max_length=30, null=True)),
                ('status', models.CharField(max_length=30, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=30, null=True)),
                ('events', models.ManyToManyField(to='nxtodo_db.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlanReminders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_check_time', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0))),
                ('after_term_check', models.BooleanField(default=False)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Plan')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(null=True)),
                ('start_remind_before', models.DurationField(null=True)),
                ('start_remind_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('stop_remind_in', models.DateTimeField(default=datetime.datetime(9999, 12, 31, 23, 59, 59, 999999))),
                ('remind_in', models.DurationField(null=True)),
                ('datetimes', django.contrib.postgres.fields.ArrayField(base_field=models.DateTimeField(), null=True, size=None)),
                ('interval', models.DurationField(null=True)),
                ('weekdays', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('description', models.TextField(null=True)),
                ('priority', models.CharField(max_length=1, null=True)),
                ('category', models.CharField(max_length=30, null=True)),
                ('status', models.CharField(max_length=30, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=30, null=True)),
                ('deadline', models.DateTimeField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskReminders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_check_time', models.DateTimeField(default=datetime.datetime(1, 1, 1, 0, 0))),
                ('after_term_check', models.BooleanField(default=False)),
                ('reminder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Reminder')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Task')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='UserEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_date', models.DateTimeField()),
                ('access_level', models.CharField(max_length=30)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPlans',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_date', models.DateTimeField()),
                ('access_level', models.CharField(max_length=30)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_date', models.DateTimeField()),
                ('access_level', models.CharField(max_length=30)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='events',
            field=models.ManyToManyField(through='nxtodo_db.UserEvents', to='nxtodo_db.Event'),
        ),
        migrations.AddField(
            model_name='user',
            name='plans',
            field=models.ManyToManyField(through='nxtodo_db.UserPlans', to='nxtodo_db.Plan'),
        ),
        migrations.AddField(
            model_name='user',
            name='tasks',
            field=models.ManyToManyField(through='nxtodo_db.UserTasks', to='nxtodo_db.Task'),
        ),
        migrations.AddField(
            model_name='task',
            name='reminders',
            field=models.ManyToManyField(through='nxtodo_db.TaskReminders', to='nxtodo_db.Reminder'),
        ),
        migrations.AddField(
            model_name='task',
            name='subtasks',
            field=models.ManyToManyField(to='nxtodo_db.Task'),
        ),
        migrations.AddField(
            model_name='reminder',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.User'),
        ),
        migrations.AddField(
            model_name='planreminders',
            name='reminder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Reminder'),
        ),
        migrations.AddField(
            model_name='plan',
            name='reminders',
            field=models.ManyToManyField(through='nxtodo_db.PlanReminders', to='nxtodo_db.Reminder'),
        ),
        migrations.AddField(
            model_name='plan',
            name='tasks',
            field=models.ManyToManyField(to='nxtodo_db.Task'),
        ),
        migrations.AddField(
            model_name='eventreminders',
            name='reminder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nxtodo_db.Reminder'),
        ),
        migrations.AddField(
            model_name='event',
            name='reminders',
            field=models.ManyToManyField(through='nxtodo_db.EventReminders', to='nxtodo_db.Reminder'),
        ),
    ]
